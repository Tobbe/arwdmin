import { useEffect, useRef } from 'react'

import {
  Form,
  Label,
  TextField,
  PasswordField,
  Submit,
  FieldError,
} from '@redwoodjs/forms'
import { Link, navigate, routes } from '@redwoodjs/router'
import { MetaTags } from '@redwoodjs/web'
import { toast, Toaster } from '@redwoodjs/web/toast'

import { useAuth } from 'src/auth'

import './ArwdminLoginPage.css'

const ArwdminLoginPage = () => {
  const { isAuthenticated, logIn } = useAuth()

  useEffect(() => {
    if (isAuthenticated) {
      navigate(routes.arwdmin())
    }
  }, [isAuthenticated])

  const emailRef = useRef<HTMLInputElement>(null)
  useEffect(() => {
    emailRef.current?.focus()
  }, [])

  const onSubmit = async (data: Record<string, string>) => {
    const response = await logIn({
      username: data.email,
      password: data.password,
    })

    if (response.message) {
      toast(response.message)
    } else if (response.error) {
      toast.error(response.error)
    } else {
      toast.success('Welcome back!')
    }
  }

  return (
    <div className="arwdmin-login-page">
      <MetaTags title="Login" />
      <Toaster toastOptions={{ className: 'rw-toast', duration: 6000 }} />

      <div className="arwdmin-login">
        <div className="arwdmin-login-container">
          <div>
            <header>
              <h2>Login</h2>
            </header>

            <div>
              <div>
                <Form onSubmit={onSubmit}>
                  <Label
                    name="email"
                    className="arwdmin-label"
                    errorClassName="arwdmin-label rw-label-error"
                  >
                    Email
                  </Label>
                  <TextField
                    name="email"
                    className="arwdmin-input"
                    errorClassName="arwdmin-input rw-input-error"
                    ref={emailRef}
                    validation={{
                      required: {
                        value: true,
                        message: 'Email is required',
                      },
                    }}
                  />

                  <FieldError name="email" className="rw-field-error" />

                  <Label
                    name="password"
                    className="arwdmin-label"
                    errorClassName="arwdmin-label rw-label-error"
                  >
                    Password
                  </Label>
                  <PasswordField
                    name="password"
                    className="arwdmin-input"
                    errorClassName="arwdmin-input rw-input-error"
                    autoComplete="current-password"
                    validation={{
                      required: {
                        value: true,
                        message: 'Password is required',
                      },
                    }}
                  />

                  {/*<div className="rw-forgot-link">
                    <Link
                      to={routes.arwdminForgotPassword()}
                      className="rw-forgot-link"
                    >
                      Forgot Password?
                    </Link>
                  </div>*/}

                  <FieldError name="password" className="rw-field-error" />

                  <Submit className="arwdmin-button">Login</Submit>
                </Form>
              </div>
            </div>
          </div>
          <div className="arwdmin-login-footer">
            <span>Don&apos;t have an account?</span>{' '}
            <Link to={routes.arwdminSignup()}>
              Sign up!
            </Link>
          </div>
        </div>
      </div>
    </div>
  )
}

export default ArwdminLoginPage
