import type {
  Delete<%= model.pascalName %>MutationVariables,
  FindArwdmin<%= model.pascalName %>ById,
} from 'types/graphql'

import { Link, routes, navigate } from '@redwoodjs/router'
import { useMutation } from '@redwoodjs/web'
import { toast } from '@redwoodjs/web/toast'

import { checkboxInputTag, formatEnum, timeTag } from 'src/lib/formatters'

const DELETE_<%= model.capitalName %>_MUTATION = gql`
  mutation Delete<%= model.pascalName %>Mutation($id: String!) {
    delete<%= model.pascalName %>(id: $id) {
      id
    }
  }
`

interface Props {
  <%= model.camelName %>: NonNullable<FindArwdmin<%= model.pascalName %>ById['<%= model.camelName %>']>
}

const <%= model.pascalName %> = ({ <%= model.camelName %> }: Props) => {
  const [delete<%= model.pascalName %>] = useMutation(DELETE_<%= model.capitalName %>_MUTATION, {
    onCompleted: () => {
      toast.success('<%= model.pascalName %> deleted')
      navigate(routes.arwdmin<%= model.pascalPluralName %>())
    },
    onError: (error) => {
      toast.error(error.message)
    },
  })

  const onDeleteClick = (id: Delete<%= model.pascalName %>MutationVariables['id']) => {
    if (confirm('Are you sure you want to delete <%= model.camelName %> ' + id + '?')) {
      delete<%= model.pascalName %>({ variables: { id } })
    }
  }

  return (
    <>
      <div>
        <header>
          <h2>
            <%= model.pascalName %> {<%= model.camelName %>.id} Detail
          </h2>
        </header>
        <table>
          <tbody>
            <%_ for (let field of modelFields) { -%>
              <tr>
                <th><%= field.name %></th>
                <%_ if (field.type === 'DateTime') { -%>
                  <td>{timeTag(<%= model.camelName %>.<%= field.name %>)}</td>
                <%_ } else if (field.type === 'Boolean') { -%>
                  <td>{checkboxInputTag(<%= model.camelName %>.<%= field.name %>)}</td>
                <%_ } else if (field.kind === 'object') { -%>
                  <td><pre>{JSON.stringify(<%= model.camelName %>.<%= field.name %>, null, 2)}</pre></td>
                <%_ } else if (field.name.toLowerCase().endsWith('image') || field.name.toLowerCase().endsWith('img')) { -%>
                  <td><img src={<%= model.camelName %>.<%= field.name %>} width="200" height="200" /></td>
                <% } else { -%>
                  <td>{<%= model.camelName %>.<%= field.name %>}</td>
                <% } -%>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <nav>
        <Link
          to={routes.arwdminEdit<%= model.pascalName %>({ id: <%= model.camelName %>.id })}
        >
          Edit
        </Link>
        <button
          type="button"
          onClick={() => onDeleteClick(<%= model.camelName %>.id)}
        >
          Delete
        </button>
      </nav>
    </>
  )
}

export default <%= model.pascalName %>
