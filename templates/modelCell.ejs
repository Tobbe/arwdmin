import type { FindRadmin<%= model.pascalName %>ById } from 'types/graphql'

import type { CellSuccessProps, CellFailureProps } from '@redwoodjs/web'

import <%= model.pascalName %> from './<%= model.pascalName %>'

export const QUERY = gql`
  query FindRadmin<%= model.pascalName %>ById($id: <%= idFieldType %>!) {
    <%= model.camelName %>: <%= model.camelName %>(id: $id) {
      <%_ for (let field of queryFields) { -%>
        <%= field.name %>
        <%_ if (field.relationFields) { -%>
          {
            <%_ for (let name of field.relationFields) { -%>
              <%= name %>
            <% } -%>
          }
        <% } -%>
      <% } %>
    }
  }
`

export const Loading = () => <div>Loading...</div>

export const Empty = () => {
  return <div><%= model.pascalName %></div>
}

export const Failure = ({ error }: CellFailureProps) => {
  console.error('error', error)

  return <div>{error?.message}</div>
}

export const Success = ({ <%= model.camelName %> }: CellSuccessProps<FindRadmin<%= model.pascalName %>ById>) => {
  return <<%= model.pascalName %> <%= model.camelName %>={<%= model.camelName %>} />
}
