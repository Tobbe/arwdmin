import { useEffect, useRef } from 'react'

import {
  Form,
  Label,
  TextField,
  PasswordField,
  FieldError,
  Submit,
} from '@redwoodjs/forms'
import { Link, navigate, routes } from '@redwoodjs/router'
import { MetaTags } from '@redwoodjs/web'
import { toast, Toaster } from '@redwoodjs/web/toast'

import { useAuth } from 'src/auth'

import './RadminSignupPage.css'

const RadminSignupPage = () => {
  const { isAuthenticated, signUp } = useAuth()

  useEffect(() => {
    if (isAuthenticated) {
      navigate(routes.radmin())
    }
  }, [isAuthenticated])

  // focus on email box on page load
  const emailRef = useRef<HTMLInputElement>(null)
  useEffect(() => {
    emailRef.current?.focus()
  }, [])

  const onSubmit = async (data: Record<string, string>) => {
    const response = await signUp({ username: data.email, password: data.password })

    if (response.message) {
      toast(response.message)
      setTimeout(() => {
        navigate(routes.radmin())
      }, 3000)
    } else if (response.error) {
      toast.error(response.error)
    } else {
      // user is signed in automatically
      toast.success('Welcome!')
    }
  }

  return (
    <div className="radmin-signup-page">
      <MetaTags title="Signup" />
      <Toaster toastOptions={{ className: 'rw-toast', duration: 6000 }} />

      <main className="radmin-signup">
        <div className="radmin-signup-container">
          <div>
            <header>
              <h2>Signup</h2>
            </header>

            <div>
              <div>
                <Form onSubmit={onSubmit} className="rw-form-wrapper">
                  <Label
                    name="email"
                    className="radmin-label"
                    errorClassName="radmin-label rw-label-error"
                  >
                    Email
                  </Label>
                  <TextField
                    name="email"
                    className="radmin-input"
                    errorClassName="radmin-input rw-input-error"
                    ref={emailRef}
                    validation={{
                      required: {
                        value: true,
                        message: 'Email is required',
                      },
                    }}
                  />
                  <FieldError name="email" className="rw-field-error" />

                  <Label
                    name="password"
                    className="radmin-label"
                    errorClassName="radmin-label rw-label-error"
                  >
                    Password
                  </Label>
                  <PasswordField
                    name="password"
                    className="radmin-input"
                    errorClassName="radmin-input rw-input-error"
                    autoComplete="current-password"
                    validation={{
                      required: {
                        value: true,
                        message: 'Password is required',
                      },
                    }}
                  />
                  <FieldError name="password" className="rw-field-error" />

                  <Submit className="radmin-button">Sign Up</Submit>
                </Form>
              </div>
            </div>
          </div>
          <div className="radmin-signup-footer">
            <span>Already have an account?</span>{' '}
            <Link to={routes.radminLogin()}>
              Log in!
            </Link>
          </div>
        </div>
      </main>
    </div>
  )
}

export default RadminSignupPage
