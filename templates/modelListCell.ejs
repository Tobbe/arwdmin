import type { FindArwdmin<%= model.pascalPluralName %> } from 'types/graphql'

import { Link, routes } from '@redwoodjs/router'
import type { CellSuccessProps, CellFailureProps } from '@redwoodjs/web'

import Paginator from 'src/components/arwdmin/Paginator'

import <%= model.pascalPluralName %> from './<%= model.pascalPluralName %>'

export const beforeQuery = ({ page, q }) => {
  page = page ? parseInt(page, 10) : 1

  return { variables: { page, q } }
}

export const QUERY = gql`
  query FindArwdmin<%= model.pascalPluralName %>($page: Int, $q: String) {
    <%= model.camelName %>Page(page: $page, q: $q) {
      <%= model.camelPluralName %> {
        <%_ for (let field of modelFields) { -%>
          <%= field.name %>
          <%_ if (field.kind === 'object') { -%>
            {
              id
            }
          <% } -%>
        <% } %>
      }
      count
    }
  }
`

export const Loading = () => <div>Loading...</div>

export const Empty = () => {
  return (
    <div className="rw-text-center">
      No <%= model.camelPluralName %> yet.{' '}
      <Link to={routes.arwdminNew<%= model.name %>()} className="rw-link">
        Create one?
      </Link>
    </div>
  )
}

export const Failure = ({ error }: CellFailureProps) => {
  console.error('error', error)

  return <div className="arwdmin-cell-error">{error?.message}</div>
}

export const Success = ({ <%= model.camelName %>Page }: CellSuccessProps<FindArwdmin<%= model.pascalPluralName %>>) => {
  return (
    <>
      <<%= model.pascalPluralName %> <%= model.camelPluralName %>={<%= model.camelName %>Page.<%= model.camelPluralName %>} />
      <Paginator count={<%= model.camelName %>Page.count} pageName="arwdmin<%= model.pascalPluralName %>" />
    </>
  )
}
