import type { EditArwdmin<%= model.pascalName %>ById, Update<%= model.pascalName %>Input } from 'types/graphql'

import {
  Form,
  FormError,
  FieldError,
  Label,
  NumberField,
  RadioField,
  TextAreaField,
  TextField,
  DatetimeLocalField,
  CheckboxField,
  Submit,
} from '@redwoodjs/forms'
import type { RWGqlError } from '@redwoodjs/forms'

const formatDatetime = (value) => {
  if (value) {
    return value.replace(/:\d{2}\.\d{3}\w/, '')
  }
}

type Form<%= model.pascalName %> = NonNullable<EditArwdmin<%= model.pascalName %>ById['<%= model.camelName %>']>

interface Props {
  <%= model.camelName %>?: EditArwdmin<%= model.pascalName %>ById['<%= model.camelName %>']
  onSave: (data: Update<%= model.pascalName %>Input, id?: Form<%= model.pascalName %>['id']) => void
  error: RWGqlError
  loading: boolean
}

const <%= model.pascalName %>Form: React.FC<Props> = ({ <%= model.camelName %>, onSave, error, loading }) => {
  const onSubmit = (data: Form<%= model.pascalName %>) => {
    onSave(data, <%= model.camelName %>?.id)
  }

  return (
    <div>
      <Form<Form<%= model.pascalName %>> onSubmit={onSubmit} error={error}>
        <FormError
          error={error}
          wrapperClassName="rw-form-error-wrapper"
          titleClassName="rw-form-error-title"
          listClassName="rw-form-error-list"
        />

        <%_ for (const field of modelFields) { -%>
          <% const renderData = getRenderData(field.name) %>
          <Label
            name="<%= field.name %>"
            className="arwdmin-label"
            errorClassName="rw-label rw-label-error"
          >
            <%= renderData.displayName %>
          </Label>

          <%_ if (renderData.subData) { %>
            <%_ for (const subData of renderData.subData) { %>
              <div className="arwdmin-check-radio-item">
                <<%= renderData.component %>
                  id="<%= model.kebabName %>-<%= field.name %>-<%= subData.value %>"
                  name="<%= field.name %>"
                  defaultValue="<%= subData.value %>"
                  defaultChecked={<%= model.camelName %>?.<%= field.name %> === '<%= subData.value %>'}
                  errorClassName="rw-input-error"
                  <%= renderData.validation ? `validation=${renderData.validation}` : '' -%>
                />
                <div><%= subData.displayName %></div>
              </div>
            <% } %>
          <% } else { %>
            <<%= renderData.component %>
              name="<%= field.name %>"
              <%= renderData.defaultProp %>={<%= model.camelName %>?.<%= field.name %>}
              className="arwdmin-input"
              errorClassName="arwdmin-input rw-input-error"
              <%= renderData.validation ? `validation=${renderData.validation}` : '' -%>
            />
          <% } %>

          <FieldError name="<%= field.name %>" className="rw-field-error" />
        <% } -%>

        <div className="rw-button-group">
          <Submit disabled={loading} className="arwdmin-button">
            Save
          </Submit>
        </div>
      </Form>
    </div>
  )
}

export default <%= model.pascalName %>Form
